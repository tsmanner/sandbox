language: c++

script: cd cpp/Parity && $CXX --std=$CXX_STD Main.cpp -o unittest.out && ./unittest.out

branches:
  only:
    - main

matrix:
  include:
    # C++11 (GCC 4.8, Clang 3.5)
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8 && CXX_STD=c++11"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.5
      env:
         - MATRIX_EVAL="CC=clang-3.5 && CXX=clang++-3.5 && CXX_STD=c++11"

    # # works on Precise and Trusty
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-5
    #   env:
    #      - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5 && CXX_STD=c++11"

    # # works on Precise and Trusty
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-6
    #   env:
    #     - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6 && CXX_STD=c++11"

    # # works on Precise and Trusty
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-7
    #   env:
    #     - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && CXX_STD=c++11"

    # # works on Precise and Trusty
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-8
    #   env:
    #     - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && CXX_STD=c++11"

before_install:
    - eval "${MATRIX_EVAL}"
